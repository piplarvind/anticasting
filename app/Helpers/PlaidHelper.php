<?php

namespace App\Helpers;

use TomorrowIdeas\Plaid\Plaid;

class PlaidHelper
{
    private $plaid_url;

    public function __construct()
    {
        $this->plaid_url = 'https://sandbox.plaid.com/';
    }

    public static function createLinkToken(){

        $post_data = [
            "client_id"=> config("app.PLAID_CLIENT_ID"),
            "secret"=> config("app.PLAID_CLIENT_SECRET"),
            "client_name" => "PAYzz App",
            "user"=> [
                "client_user_id"=> "user-id"
            ],
            "country_codes"=> ["US"],
            "language"=> "en",
            "products"=>["auth","identity"]            
        ];
        
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $this->plaid_url.'link/token/create');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($post_data));

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $return = json_decode(curl_exec($ch));
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        //dd($return);
        echo $return->link_token;

    }

    public static function getAccessToken()
    {
        return PlaidHelper::createPublicToken();
    }

    public static function createPublicToken(){
        $plaid = new Plaid(
            config("app.PLAID_CLIENT_ID"),
            config("app.PLAID_CLIENT_SECRET"),
            config("app.PLAID_ENVIRONMENT")
        );

        $post_data = [
            "client_id"=> config("app.PLAID_CLIENT_ID"),
            "secret"=> config("app.PLAID_CLIENT_SECRET"),
            "institution_id"=> "ins_3",
            "initial_products"=>["auth","identity"]
            
        ];
        //dd($post_data);

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $curl = curl_init();

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        $request_type = 'POST';

        curl_setopt_array($curl, array(
            CURLOPT_URL =>  'https://sandbox.plaid.com/sandbox/public_token/create',
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => '',
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 0,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_POSTFIELDS => json_encode($post_data),
            CURLOPT_CUSTOMREQUEST => $request_type,
            CURLOPT_HTTPHEADER => $headers
        ));

        $return = json_decode(curl_exec($curl));
        if (curl_errno($curl)) {
            echo 'Error:' . curl_error($curl);
        }
        curl_close($curl);
        //dd($return);
        //echo $return->public_token;
        return PlaidHelper::exchangeToken($return->public_token);
    }

    private static function exchangeToken($public_token){
        //dd($public_token);
        $plaid = new Plaid(
            config("app.PLAID_CLIENT_ID"),
            config("app.PLAID_CLIENT_SECRET"),
            config("app.PLAID_ENVIRONMENT")
        );

        $post_data = [
            "client_id"=> config("app.PLAID_CLIENT_ID"),
            "secret"=> config("app.PLAID_CLIENT_SECRET"),
            "public_token"=> $public_token
        ];

        //dd($post_data);

        $curl = curl_init();

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        $request_type = 'POST';

        curl_setopt_array($curl, array(
            CURLOPT_URL => 'https://sandbox.plaid.com/item/public_token/exchange',
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => '',
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 0,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_POSTFIELDS => json_encode($post_data),
            CURLOPT_CUSTOMREQUEST => $request_type,
            CURLOPT_HTTPHEADER => $headers
        ));

        $return = json_decode(curl_exec($curl));
        if (curl_errno($curl)) {
            echo 'Error:' . curl_error($curl);
        }
        curl_close($curl);
        //dd($return);
        return $return->access_token;
   }

    # Create a processor token for a specific account id.
    public static function createProcessorToken(){
        $access_token = PlaidHelper::getAccessToken();
        $post_data = [
            "client_id"=> config("app.PLAID_CLIENT_ID"),
            "secret"=> config("app.PLAID_CLIENT_SECRET"),
            "access_token"=> $access_token,
            "account_id"=>"R6oGvAEjNAuLPplEKQRLCe3n76bNXRHRGmL47",
            "processor"=>"sila_money"            
        ];
        //dd($post_data);

        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://sandbox.plaid.com/processor/token/create');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($post_data));

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $return = json_decode(curl_exec($ch));
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        dd($return);
        return $return->processor_token;
    }

}